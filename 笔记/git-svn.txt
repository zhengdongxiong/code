服务器为svn 想用git操作，用git svn，将服务器代码下载到本地，并利用git操作
使用git svn时才会与服务器连接

------------------------------------------------------
查看帮助
    git --help

使用指定目录创建Git仓库(本地)
    git init ...
    
拷贝一个Git仓库到本地
    git clone ...

将文件添加到缓存
    git add ...

显示工作目录与暂存区状态
    git status
    状态：
    A   你本地新增的文件（服务器上没有）.
    C   文件的一个新拷贝.
    D   你本地删除的文件（服务器上还在）.
    M   文件的内容或者mode被修改了.
    R   文件名被修改了。
    T   文件的类型被修改了。
    U   文件没有被合并(你需要完成合并才能进行提交)。
    X   未知状态(很可能是遇到git的bug了，你可以向git提交bug report)。
    
查看文件不同
    git diff (--stst(摘要))

提交到仓库中
    git commit 
        -m(注释)
        --amend(修改注释)

取消已缓存的内容(可以回退版本/工作区)
    git reset  ...(默认--mixed)
        --soft 本地仓库变回最初的样子
        --mixed 本地仓库和暂存区变成最初的样子(默认)
        --hard 工作区与暂存区与本地仓库变成最初的样子
            HEAD(表示最新版本) HEAD^(上一个版本) HEAD~100(上100个版本)
        git reset --hard HEAD~3(回退到上三个版本)
创建分支
    git branch (-d删除分支) ...
    
切换分支
    git checkout ...
        -- filename(文件从暂存区复原到工作区)
    
合并分支
    git merge ...

移动/重命名
    git mv

删除一个文件，并加入暂存区
    git rm ...
        rm ...
        add ...

打标签
    git tag ... [提交版本id前七位(指定哪一次打上标签)] -d(删除标签)
    git log 

查看与标签对应信息
    git show ...

查看日志
    git log
    git reflog(以查看所有分支的所有操作记录包括已经被删除的 commit 记录和 reset 的操作)
    
配置
    git config --global user.name 'runoob'
    git config --global user.email test@runoob.com

远程仓库操作
    ...
    
私有(需要SSH)
    git clone  git@github.com:用户名/仓库名.git


------------------------------------------------------------------

查看帮助
    git svn -h

从仓库下载
    git svn clone [-r...(开始)：结束版本号] https://....(从第一个版本开始同步)
    有260版本，只取前5个，260-5 = 255
        git svn clone -r255:HEAD https://
    
查看最后的版本号(svn服务器)    
    svn info ...
    
下载一个 SVN 项目和它的整个代码历史，并初始化为 Git 代码库
    git svn clone -s [repository] -r ...(下载指定版本号)
    

//前提进入下载目录
查看当前版本库情况
    git svn info

取回远程仓库所有分支的变化
    git svn fetch

//前提进入下载目录
取回远程仓库更新
    git svn rebase 

//前提进入下载目录
上传当前分支的本地仓库到远程仓库
    git svn dcommit
    
创建分支 
    git svn branch [...] -m [message]

新建本地分支，与svn对应
    git svn fetch <远程分支名称> 获取svn仓库该分支的代码
    git checkout -b <本地分支名> <远程分支名称> //本地分支对应远程分支

----------------------------------------------------------------------

一般工作流程（推荐）
    新建分支git checkout -b <本地分支名称> <远程分支名称>
    示例：git checkout -b a svn/a
    说明：此处新建了一个本地分支a，与svn的a分支对应。
    在本地工作，commit到对应分支上
    git svn rebase 从svn上更新代码, 相当于svn的update。
    git svn dcommit 提交你的commit到svn远程仓库，建议提交前都先运行下git svn rebase。
    
    